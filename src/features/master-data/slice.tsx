import { createSlice } from "@reduxjs/toolkit";
import { IMasterData } from "types/models/master-data";
import { RootCase } from "./case";
import {
  countryState,
  districtState,
  loanProductState,
  partnerState,
  provinceState,
  wardState,
  partnerProductState,
  collateralState,
  personalRepState,
  exceptionFileState,
  marriedStatusState,
  educationState,
  cifIfTypeState,
  addressTypeState,
  relationshipState,
  ownerPropertyState,
  customerTypeState,
  genderState,
  averageIncomeState,
  custClassififationState,
  peopleDependState,
  residentStatusState,
  debtClassificationState,
  collateralTypeState,
  typeTermLoanState,
  loanPurposeState,
  remarkState,
  methodReceiveSalaryState,
  ablePayLabelState,
  businessTypeShState,
  businessTypeState,
  contractTermState,
  frequenceState,
  repayPrincipalInterestState,
  typeRealEstateState,
  typeRealEstateStatusState,
  typeExceptionState,
  typeRiskState,
  pollicyDetailState,
  acceptCreditLabelState,
  typeTemplateState,
  authenQuestionState,
  customerSegmentState,
  customerNeedState,
  cardDeliveryMethodState,
  releaseTypeState,
  guaranteeFormState,
  giftConditionState,
  typeCardUseState,
  giftSelectionState,
  careersState,
  fatcaState,
  creditInstitutionState,
  loanPurposeCoreState,
  currencyTypeState,
  lendingMethodState,
  disbursementState,
  scheduleState,
  loanInterestRateState,
  businessLicenceTypeState,
  paymentMethodState,
  issuerState,
  assetTypeState,
  acceptStatusState,
  otherContractLabelState,
  businessRepresentationState,
  documentTypeState,
  scoreRankDetailState,
  appraisalUnitTypeState,
  appraisalPurposeState,
  roadWidthState,
  roadCollateralCartifiredTypeState,
  collateralOwnerTypeState,
  purposeUsingLaneState,
  originLaneUseState,
  landUseCertifiedState,
  constructionPermitState,
  constructionTypeState,
  collateralCertificateTypeState,
  legalStatusState,
  purposeUseLaneValuationState,
  typeApartmentState,
  vehicleStatusState,
  goodPropertyStatusState,
  devicesPropertyStatusState,
  rightPropertyPropertyStatusState,
  paperTypeState,
  propertyTypeState,
  vehicleTypeState,
  vehicleDetailState,
  listLegalDocumentState,
  collateralLocationTypeState,
  personTypesState,
  independentValuationState,
  priceAppraisalState,
  countriesManufactureState,
  businessTypeIncomeState,
  rentalOwnerPropertyState,
  capitalNeedState,
  isPassState,
  reasonForRefusalState,
  noticeTitleState,
  documentStatusState,
  machineTypeState,
  validateMaCostTypeState,
  envGlobalState,
  policyGroupState,
} from "./state";

const initialState: IMasterData = {
  register: { mounted: false },
    // ============= Config Common ========================= //
  country: countryState,
  province: provinceState,
  district: districtState,
  ward: wardState,
  loanProduct: loanProductState,
  partner: partnerState,
  partnerProduct: partnerProductState,
  collateral: collateralState,
  personalRep: personalRepState,
  exceptionFile: exceptionFileState,
  marriedStatus: marriedStatusState,
  education: educationState,
  cifIfType: cifIfTypeState,
  addressType: addressTypeState,
  relationship: relationshipState,
  ownerProperty: ownerPropertyState,
  customerType: customerTypeState,
  gender: genderState,
  averageIncome: averageIncomeState,
  custClassififation: custClassififationState,
  peopleDepend: peopleDependState,
  residentStatus: residentStatusState,
  debtClassification: debtClassificationState,
  collateralType: collateralTypeState,
  typeTermLoan: typeTermLoanState,
  loanPurpose: loanPurposeState,
  remark: remarkState,
  methodReceiveSalary: methodReceiveSalaryState,
  ablePayLabel: ablePayLabelState,
  businessTypeSh: businessTypeShState,
  businessType: businessTypeState,
  contractTerm: contractTermState,
  frequence: frequenceState,
  repayPrincipalInterest: repayPrincipalInterestState,
  typeRealEstate: typeRealEstateState,
  typeRealEstateStatus: typeRealEstateStatusState,
  typeException: typeExceptionState,
  typeRisk: typeRiskState,
  pollicyDetail: pollicyDetailState,
  acceptCreditLabel: acceptCreditLabelState,
  typeTemplate: typeTemplateState,
  customerSegment: customerSegmentState,
  scoreRankDetail: scoreRankDetailState,
  appraisalUnitType: appraisalUnitTypeState,
  appraisalPurpose: appraisalPurposeState,
  roadWidth: roadWidthState,
  collateralCertifiedType: roadCollateralCartifiredTypeState,
  collateralOwnerType: collateralOwnerTypeState,
  purposeUsingLane: purposeUsingLaneState,
  originLaneUse: originLaneUseState,
  landUseCertified: landUseCertifiedState,
  constructionPermit: constructionPermitState,
  constructionType: constructionTypeState,
  collateralCertificateType: collateralCertificateTypeState,
  legalStatus: legalStatusState,
  purposeUseLaneValuation: purposeUseLaneValuationState,
  typeApartment: typeApartmentState,
  vehicleStatus: vehicleStatusState,
  devicesPropertyStatus: devicesPropertyStatusState,
  goodPropertyStatus: goodPropertyStatusState,
  rightPropertyPropertyStatus: rightPropertyPropertyStatusState,
  paperType: paperTypeState,
  propertyType: propertyTypeState,
  vehicleType: vehicleTypeState,
  machineType: machineTypeState,
  vehicleDetail: vehicleDetailState,
  listLegalDocument: listLegalDocumentState,
  collateralLocationType: collateralLocationTypeState,
  independentValuation: independentValuationState,
  priceAppraisal: priceAppraisalState,
  countriesManufacture: countriesManufactureState,
  businessTypeIncome: businessTypeIncomeState,
  rentalOwnerProperty: rentalOwnerPropertyState,
  documentStatus : documentStatusState,
  validateMaCostType: validateMaCostTypeState,

  // ============= Config Card ========================= //
  authenQuestion: authenQuestionState,
  customerNeed: customerNeedState,
  cardDeliveryMethod: cardDeliveryMethodState,
  releaseType: releaseTypeState,
  guaranteeForm: guaranteeFormState,
  giftCondition: giftConditionState,
  typeCardUse: typeCardUseState,
  giftSelection: giftSelectionState,
  personTypes: personTypesState,
  // ============= Config Normal ========================= //
  careers: careersState,
  fatca: fatcaState,
  creditInstitution: creditInstitutionState,
  loanPurposeCore: loanPurposeCoreState,
  currencyType: currencyTypeState,
  lendingMethod: lendingMethodState,
  disbursement: disbursementState,
  schedule: scheduleState,
  loanInterestRate: loanInterestRateState,
  businessLicenceType: businessLicenceTypeState,
  paymentMethod: paymentMethodState,
  issuer: issuerState,
  assetType: assetTypeState,
  acceptStatus: acceptStatusState,
  otherContractLabel: otherContractLabelState,
  businessRepresentation: businessRepresentationState,
  documentType: documentTypeState,
  capitalNeed:capitalNeedState,
  isPass: isPassState,
  reasonForRefusal: reasonForRefusalState,
  noticeTitle: noticeTitleState,
  envGlobal: envGlobalState,
  policyGroup: policyGroupState

}

const MasterDataSlice = createSlice({
  name: '@@master/data',
  initialState,
  reducers: {
    ...RootCase
  }
});

export const MasterDataActions = MasterDataSlice.actions;

const MasterDataReducer = MasterDataSlice.reducer;
export default MasterDataReducer;